controller:
  image:
    digest: ""
  ingressClass: nginx
  ingressClassResource:
    name: nginx
    enabled: true
    default: true

  config:
    use-gzip: "true"
    gzip-level: "4"
    gzip-min-length: "256"
    client-header-buffer-size: "4k"
    large-client-header-buffers: "8 128k"
    client-body-buffer-size: "256k"
    proxy-body-size: "100M"
    server-name-hash-bucket-size: "256"
    use-http2: "true"
    ssl-ciphers: "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4"
    ssl-protocols: "TLSv1.3 TLSv1.2"
    server-tokens: "false"
    hsts: "true"
    hsts-include-subdomains: "true"
    hsts-max-age: "15724800"
    hsts-preload: "true"
    http-snippet: |-
      sendfile  on;
    
  proxySetHeaders: {}
  
  addHeaders:
    Referrer-Policy: strict-origin-when-cross-origin

  admissionWebhooks:
    port: 18443

  service:
    type: LoadBalancer
    loadBalancerIP: 10.0.0.1
    externalTrafficPolicy: Local
    nodePorts:
      https: "8443"
  
  kind: DaemonSet
  hostNetwork: true
  hostPort:
    enabled: false
defaultBackend:
  enabled: "true"
tcp:
#  53: "dns/dns:53"
  20000: "not-exist-ns/should-be-modified:20000"

udp:
#  53: "dns/dns:53"
#  30000: "not-exist-ns/should-be-modified:30000"