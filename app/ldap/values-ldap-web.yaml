global:
  nameOverride: ldap-web

defaultPodOptions: {}
  
controllers:
  lam:
    enabled: true
    type: deployment
    replicas: 1
    initContainers:
      copy-config:
        image:
          repository: ghcr.io/ldapaccountmanager/lam
          tag: 8.8
          pullPolicy: IfNotPresent
        command: ["sh", "/tmp/init.sh"]
    containers:
      main:
        image:
          repository: ghcr.io/ldapaccountmanager/lam
          tag: 8.8
          pullPolicy: IfNotPresent
        env:
          TZ: Asia/Shanghai
          LAM_SKIP_PRECONFIGURE: false
          LDAP_DOMAIN: example.com
          LDAP_BASE_DN: dc=example,dc=com
          LDAP_GROUPS_DN: ou=groups,dc=example,dc=com
          LDAP_ORGANISATION: "example LDAP Account Manager"
          LDAP_SERVER: ldap://ldap:389
          LDAP_USER: cn=admin,dc=example,dc=com
          LDAP_USERS_DN: ou=users,dc=example,dc=com
          LAM_LANG: en_US
          LAM_PASSWORD: lam
          LAM_CONFIGURATION_DATABASE: 'files'
          LAM_CONFIGURATION_HOST: ''
          LAM_CONFIGURATION_PORT: ''
          LAM_CONFIGURATION_USER: ''
          LAM_CONFIGURATION_PASSWORD: ''
          LAM_CONFIGURATION_DATABASE_NAME: ''
          LAM_LICENSE: ''
  ssp:
    enabled: true
    type: deployment
    replicas: 1
    containers:
      main:
        image:
          repository: tiredofit/self-service-password
          tag: 5.3.3
          pullPolicy: IfNotPresent
        env:
          TZ: Asia/Shanghai
          LDAP_SERVER: ldap://ldap
          LDAP_BINDDN: cn=admin,dc=example,dc=com
          LDAP_BINDPASS:
            valueFrom:
              secretKeyRef:
                name: ldap-ltb-passwd
                key: LDAP_ADMIN_PASSWORD
          SMTP_PASS:
            valueFrom:
              secretKeyRef:
                name: ldap-web-smtp-passwd
                key: SMTP_PASSWORD
          LDAP_STARTTLS: "false"
          LDAP_BASE_SEARCH: dc=example,dc=com
          IS_BEHIND_PROXY: "true"
          SITE_URL: https://ssp.example.com

service:
  lam:
    enabled: true
    controller: lam
    ports:
      http:
        enabled: true
        port: 80
  ssp:
    enabled: true
    controller: ssp
    ports:
      http:
        enabled: true
        port: 80

ingress:
  lam:
    enabled: true
    annotations:
      helm.sh/resource-policy: keep
      kubernetes.io/tls-acme: "true"
      cert-manager.io/cluster-issuer: example.com-letsencrypt-issuer
    className: "nginx"
    hosts:
      - host: lam.example.com
        paths:
        - path: /
          pathType: Prefix
          service:
            name: ldap-web-lam
            port: 80
    tls:
    - hosts:
      - lam.example.com
      secretName: lam.example.com-tls
  ssp:
    enabled: true
    annotations:
      helm.sh/resource-policy: keep
      kubernetes.io/tls-acme: "true"
      cert-manager.io/cluster-issuer: example.com-letsencrypt-issuer
    className: "nginx"
    hosts:
      - host: ssp.example.com
        paths:
        - path: /
          pathType: Prefix
          service:
            name: ldap-web-ssp
            port: 80
    tls:
    - hosts:
      - ssp.example.com
      secretName: ssp.example.com-tls

persistence:
  scripts:
    type: configMap
    name: ldap-web-scripts
    defaultMode: 0555
    advancedMounts:
      lam:
        copy-config:
          - path: /tmp/init.sh
            readOnly: true
            subPath: lam-init.sh
  lam-config:
    enabled: true
    type: persistentVolumeClaim
    storageClass: local-zfs-sc
    accessMode: ReadWriteOnce
    size: 1Gi
    retain: true
    globalMounts: []
    advancedMounts:
      lam:
        main:
        - path: /etc/ldap-account-manager
          readOnly: false
          subPath: etc
        - path: /var/lib/ldap-account-manager
          readOnly: false
          subPath: var
        copy-config:
        - path: /data
  ssp-config:
    enabled: true
    type: secret
    name: ldap-web-ssp-config
    defaultMode: 0555
    advancedMounts:
      ssp:
        main:
          - path: /www/ssp/conf/config.inc.local.php
            readOnly: true
            subPath: config.inc.local.php
  ssp-images:
    type: configMap
    name: ssp-images
    defaultMode: 0555
    advancedMounts:
      ssp:
        main:
          - path: /www/ssp/conf/images/
            readOnly: true
          
configMaps:
  scripts:
    data:
      lam-init.sh: |-
        # Copy config from /etc
        mkdir -p /data/etc
        if ! [ -f /data/etc/config.cfg ]; then
          cp -a /etc/ldap-account-manager/. /data/etc/
        fi
        # Copy config from /var
        mkdir -p /data/var
        if ! [ -f /data/var/config/config.cfg ]; then
          cp -a /var/lib/ldap-account-manager/. /data/var/
        fi

secrets:
  smtp-passwd:
    stringData:
      SMTP_PASSWORD: Not@SecurePassw0rd
      
  ssp-config:
    stringData:
      config.inc.local.php: |-
        <?php

        # LDAP
        $ldap_url = "ldap://ldap";
        $ldap_starttls = false;
        $ldap_binddn = "cn=admin,dc=example,dc=com";
        $ldap_bindpw = "Not@SecurePassw0rd";
        $ldap_base = "ou=users,dc=example,dc=com";
        $ldap_login_attribute = "uid";
        $ldap_fullname_attribute = "uid";
        $ldap_filter = "(&(objectClass=person)($ldap_login_attribute={login}))";

        # Hash mechanism for password:
        # SSHA, SSHA256, SSHA384, SSHA512
        # SHA, SHA256, SHA384, SHA512
        # SMD5
        # MD5
        # CRYPT
        # clear (the default)
        # auto (will check the hash of current password)
        # This option is not used with ad_mode = true
        $hash = "SSHA";

        # Local password policy
        # This is applied before directory password policy
        # Minimal length
        $pwd_min_length = 10;
        # Maximal length
        $pwd_max_length = 0;
        # Minimal lower characters
        $pwd_min_lower = 1;
        # Minimal upper characters
        $pwd_min_upper = 1;
        # Minimal digit characters
        $pwd_min_digit = 1;
        # Minimal special characters
        $pwd_min_special = 1;
        # Definition of special characters
        $pwd_special_chars = "^a-zA-Z0-9";
        # Forbidden characters
        #$pwd_forbidden_chars = "@";
        # Don't reuse the same password as currently
        $pwd_no_reuse = true;
        # Check that password is different than login
        $pwd_diff_login = true;
        # Complexity: number of different class of character required
        $pwd_complexity = 4;
        # use pwnedpasswords api v2 to securely check if the password has been on a leak
        $use_pwnedpasswords = false;
        # Show policy constraints message:
        # always
        # never
        # onerror
        $pwd_show_policy = "always";
        # Position of password policy constraints message:
        # above - the form
        # below - the form
        $pwd_show_policy_pos = "above";
        $pwd_forbidden_ldap_fields = array('mail', 'cn', 'givenName', 'sn');

        ## Mail
        # LDAP mail attribute
        $mail_attribute = "mail";
        # Get mail address directly from LDAP (only first mail entry)
        # and hide mail input field
        # default = false
        $mail_address_use_ldap = false;
        # Who the email should come from
        $mail_from = "system@example.com";
        $mail_from_name = "Self Service Password";
        $mail_signature = "\nFrom SSP Cloud. (Self Service Password Center)";
        # Notify users anytime their password is changed
        $notify_on_change = true;
        $mail_protocol = 'smtp';
        $mail_smtp_debug = 0;
        $mail_debug_format = 'html';
        $mail_smtp_host = 'smtp.example.com';
        $mail_smtp_auth = true;
        $mail_smtp_user = 'system@example.com';
        $mail_smtp_pass = '';
        $mail_smtp_port = 994;
        $mail_smtp_timeout = 30;
        $mail_smtp_keepalive = false;
        $mail_smtp_secure = 'ssl';
        $mail_smtp_autotls = false;
        $mail_contenttype = 'text/plain';
        $mail_wordwrap = 0;
        $mail_charset = 'utf-8';
        $mail_priority = 3;
        $mail_newline = PHP_EOL;

        $token_lifetime = "3600";

        ## Questions/answers
        # Use questions/answers?
        # true (default)
        # false
        $use_questions = false;

        ## SMS
        # Use sms
        $use_sms = false;

        # Encryption, decryption keyphrase, required if $crypt_tokens = true
        # Please change it to anything long, random and complicated, you do not have to remember it
        # Changing it will also invalidate all previous tokens and SMS codes
        $keyphrase = "Not@SecurePassw0rd";

        # Default language
        $lang = "zh-CN";

        # Logo
        $logo = "conf/images/logo.png";

        # Background image
        $background_image = "conf/images/bk.jpg";